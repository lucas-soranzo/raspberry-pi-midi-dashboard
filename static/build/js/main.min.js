!function(t){t.fn.midiCommand=function(e){console.log(this);let o={byte1:204,byte2:0,byte3:0,name:"New Command"};return Object.assign(o,e),this.addClass("btn btn-light btn-lg mr-3"),this.html(o.name),this.appendTo("#commandContainer"),this.on("click",e=>{this.trigger("blur"),t.ajax({url:"/command",data:{status_byte:o.byte1,data_byte1:o.byte2,data_byte2:o.byte3},success:console.log})}),this}}(jQuery);const Commands=new class{constructor(){this.stored=[],this.load()}createElement(t){return $("<button>").midiCommand(t)}push(t){this.stored.push(t),this.createElement(t),window.localStorage.setItem("commands",JSON.stringify(this.stored))}load(){const t=window.localStorage.getItem("commands");if(t)try{this.stored=JSON.parse(t),this.stored.map(t=>this.createElement(t))}catch(t){console.error(t)}}clear(){window.localStorage.removeItem("commands"),window.location.reload()}};$("#clearCommands").on("click",()=>Commands.clear()),$("#commandForm").on("submit",t=>{t.preventDefault();const e=new FormData(t.target),o=["name","byte1","byte2","byte3"].reduce((t,o)=>(t[o]=e.get(o),t),{});Commands.push(o)});